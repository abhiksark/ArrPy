[build-system]
requires = ["setuptools>=61.0", "wheel", "numpy>=1.20.0", "cython>=0.29.0"]
build-backend = "setuptools.build_meta"

[project]
name = "arrpy"
version = "1.0.0"
description = "Educational NumPy recreation demonstrating optimization from Python to C++"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "ArrPy Contributors", email = "arrpy@example.com"},
]
maintainers = [
    {name = "ArrPy Team", email = "arrpy@example.com"},
]
keywords = [
    "numpy",
    "array",
    "scientific-computing",
    "education",
    "optimization",
    "cython",
    "simd",
    "performance",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Cython",
    "Programming Language :: C++",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Education",
]

dependencies = [
    "numpy>=1.20.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-benchmark>=4.0.0",
    "pytest-xdist>=3.0.0",
    "ruff>=0.1.0",
    "black>=23.0.0",
    "mypy>=1.0.0",
    "isort>=5.12.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "sphinx-autodoc-typehints>=1.22.0",
    "numpydoc>=1.5.0",
]
profile = [
    "memory-profiler>=0.60.0",
    "line-profiler>=4.0.0",
    "py-spy>=0.3.14",
]
build = [
    "cython>=0.29.0",
    "pybind11>=2.10.0",
    "cmake>=3.18",
    "wheel>=0.38.0",
    "build>=0.10.0",
    "twine>=4.0.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/arrpy"
Documentation = "https://arrpy.readthedocs.io"
Repository = "https://github.com/yourusername/arrpy.git"
Issues = "https://github.com/yourusername/arrpy/issues"
Changelog = "https://github.com/yourusername/arrpy/blob/main/CHANGELOG.md"

[tool.setuptools]
packages = ["arrpy", "arrpy.backends", "arrpy.backends.python", "arrpy.backends.cython", "arrpy.backends.c"]
include-package-data = true

[tool.setuptools.package-data]
arrpy = ["*.pyx", "*.pxd", "*.h", "*.cpp"]

[tool.ruff]
line-length = 100
target-version = "py38"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.black]
line-length = 100
target-version = ["py38", "py39", "py310", "py311"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_any_generics = false
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"

[tool.coverage.run]
source = ["arrpy"]
omit = [
    "*/tests/*",
    "*/benchmarks/*",
    "*/examples/*",
    "*/tutorials/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
]